import { useEffect, useState } from "react";
import { Table, Button, Modal, Form, Input, DatePicker, message } from "antd";
import actingDirectorService from "../services/actingDirectorService";

const ActingDirector = () => {
  const [directors, setDirectors] = useState([]);
  const [loading, setLoading] = useState(false);
  const [modalOpen, setModalOpen] = useState(false);
  const [form] = Form.useForm();

  useEffect(() => {
    fetchDirectors();
  }, []);

  const fetchDirectors = async () => {
    setLoading(true);
    try {
      const response = await actingDirectorService.getDirectors();
      setDirectors(response.data);
    } catch (error) {
      message.error("‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß",error);
    }
    setLoading(false);
  };

  const handleAddDirector = async (values) => {
    try {
      await actingDirectorService.createDirector(values);
      message.success("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      fetchDirectors();
      setModalOpen(false);
    } catch (error) {
      message.error("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß",error);
    }
  };

  const columns = [
    { title: "‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Å‡∏≤‡∏£", dataIndex: "acting_person" },
    { title: "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°", dataIndex: "start_date" },
    { title: "‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î", dataIndex: "end_date" },
  ];

  return (
    <div>
      <h2>üìù ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Å‡∏≤‡∏£‡πÅ‡∏ó‡∏ô ‡∏ú‡∏≠.</h2>
      <Button type="primary" onClick={() => setModalOpen(true)}>‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</Button>
      <Table dataSource={directors} columns={columns} rowKey="id" loading={loading} />
      <Modal title="‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Å‡∏≤‡∏£" open={modalOpen} onCancel={() => setModalOpen(false)} footer={null}>
        <Form form={form} layout="vertical" onFinish={handleAddDirector}>
          <Form.Item name="acting_person" label="‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏Å‡∏≤‡∏£" rules={[{ required: true }]}>
            <Input />
          </Form.Item>
          <Form.Item name="start_date" label="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°" rules={[{ required: true }]}>
            <DatePicker />
          </Form.Item>
          <Form.Item name="end_date" label="‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î" rules={[{ required: true }]}>
            <DatePicker />
          </Form.Item>
          <Button type="primary" htmlType="submit">‡πÄ‡∏û‡∏¥‡πà‡∏°</Button>
        </Form>
      </Modal>
    </div>
  );
};

export default ActingDirector;
